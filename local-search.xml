<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>操作系统（计划更新）</title>
    <link href="/2023/06/22/p8%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    <url>/2023/06/22/p8%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p class="note note-success">author: YaoGuangMing 2023-HDU</p><p class="note note-warning">转载请标明出处！</p>]]></content>
    
    
    <categories>
      
      <category>操作系统</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>计算机网络（计划更新）</title>
    <link href="/2023/06/22/p6%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    <url>/2023/06/22/p6%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</url>
    
    <content type="html"><![CDATA[<p>1</p><span id="more"></span><p class="note note-success">author: YaoGuangMing 2023-HDU</p><p class="note note-warning">转载请标明出处！</p>]]></content>
    
    
    <categories>
      
      <category>计算机网络</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>计算机组成原理（计划更新）</title>
    <link href="/2023/06/22/p9%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    <url>/2023/06/22/p9%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p class="note note-success">author: YaoGuangMing 2023-HDU</p><p class="note note-warning">转载请标明出处！</p>]]></content>
    
    
    <categories>
      
      <category>计算机组成原理</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>数据结构（计划更新）</title>
    <link href="/2023/06/22/p7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <url>/2023/06/22/p7%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p class="note note-success">author: YaoGuangMing 2023-HDU</p><p class="note note-warning">转载请标明出处！</p>]]></content>
    
    
    <categories>
      
      <category>数据结构</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>数学笔记</title>
    <link href="/2023/03/05/1%E6%95%B0%E7%BD%AE%E9%A1%B6/"/>
    <url>/2023/03/05/1%E6%95%B0%E7%BD%AE%E9%A1%B6/</url>
    
    <content type="html"><![CDATA[<p>数 【点击查看】</p><span id="more"></span><div class="back"><div class="item" onclick="f1()" style="background: rgba(0,0,0,0.5)  url('/img/原神/魈.jpg');     background-size: cover;    background-attachment: scroll;background-blend-mode: darken;" >高数</div><div class="item" onclick="f2()" style="background: rgba(0,0,0,0.5)  url('/img/原神/迪卢克.jpg');     background-size: cover;    background-attachment: scroll;background-blend-mode: darken;" >线代</div><div class="item" onclick="f3()" style="background: rgba(0,0,0,0.5)  url('/img/原神/妮露.jpg');     background-size: cover;    background-attachment: scroll;background-blend-mode: darken;" >概率论</div><div class="item" onclick="f4()" style="background: rgba(0,0,0,0.5)  url('/img/原神/甘雨.jpg');     background-size: cover;    background-attachment: scroll;background-blend-mode: darken;" >竞赛</div></div><br><br><div id="d1"><a href="/mysrc/math/highmath1.pdf"><p class="note note-info">考研高数总结1</p></a></div><div id="d2"><p class="note note-danger">...</p></div><div id="d3"><p class="note note-primary">...</p></div><div id="d4"><a href="/mysrc/cmc/1.1.pdf"><p class="note note-secondary">蒲和平1.1</p></a><a href="/mysrc/cmc/1.2.pdf"><p class="note note-secondary">蒲和平1.2</p></a></div><p class="note note-success">author: YaoGuangMing 2023-HDU</p><p class="note note-warning">转载请标明出处！</p><script>function init(){document.getElementById("d1").style.display="none";document.getElementById("d2").style.display="none";document.getElementById("d3").style.display="none";document.getElementById("d4").style.display="none";}init();function f1(){init();document.getElementById("d1").style.display="";}function f2(){init();document.getElementById("d2").style.display="";}function f3(){init();document.getElementById("d3").style.display="";}function f4(){init();document.getElementById("d4").style.display="";}</script>]]></content>
    
    
    <categories>
      
      <category>数学</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>操作系统实验五文件系统</title>
    <link href="/2022/12/16/p4/"/>
    <url>/2022/12/16/p4/</url>
    
    <content type="html"><![CDATA[<p>实验五已验收，不建议直接用我的代码（看看就好），不然你的分数可能会不太好</p><span id="more"></span><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>系统验收的时候老师指出了很大的问题，就是这个系统真实情况下是在磁盘上进行操作的，我的系统就是在内存中跑的</p><h3 id="命令简要"><a href="#命令简要" class="headerlink" title="命令简要"></a>命令简要</h3><ul><li>cd dirname 【更改目录，注意dirname只能是ls命令下的那些文件名】</li><li>ls 【打印出当前目录下的文件】</li><li>mkdir dirname 【创建目录】</li><li>rmdir dirname 【删除目录】</li><li>create filename 【 创建文件】</li><li>rm filename 【删除文件】</li><li>open filename 【 打开文件,打开后进入该文件目录，可输入read ,write, close命令】</li><li>read 【打印文件内容】</li><li>write 【输入命令后，选择写入模式，0截断写，1覆盖写，2追加写】</li><li>close 【关闭文件】</li><li>exit 【退出系统】</li></ul><h3 id="执行截图"><a href="#执行截图" class="headerlink" title="执行截图"></a>执行截图</h3><p><img src="/img/os/14.png"></p><h3 id="代码附录"><a href="#代码附录" class="headerlink" title="代码附录"></a>代码附录</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;time.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> blockSize 1024 <span class="hljs-comment">//一个磁盘块大小</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> Size 1024000 <span class="hljs-comment">//磁盘总大小</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> End 65535 <span class="hljs-comment">//FAT表中盘块结束标志</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> Free 0 <span class="hljs-comment">//FAT表中空闲块标志</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> maxOpenfile 10 <span class="hljs-comment">//用户文件表最大长度</span></span><br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">FCB</span>&#123;</span><br>    <span class="hljs-type">char</span> fileName[<span class="hljs-number">8</span>];  <br>    <span class="hljs-type">char</span> exName[<span class="hljs-number">3</span>]; <span class="hljs-comment">//扩展名，有&quot;dr&quot;和&quot;fl&quot;两种</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> attribute; <span class="hljs-comment">//0代表目录，1代表文件</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">short</span> time;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">short</span> date;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">short</span> first;   <span class="hljs-comment">//起始盘块号，由于我们只分配一个磁盘块给文件，这个是比较重要的数据</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> length;   <span class="hljs-comment">//文件长度</span><br>    <span class="hljs-type">char</span> <span class="hljs-built_in">free</span>;   <span class="hljs-comment">//是否已分配</span><br>&#125;fcb;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">FAT</span>&#123;</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">short</span> id; <span class="hljs-comment">//有Free和End两种类型</span><br>&#125;fat;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">userOpen</span>&#123;</span><br>    <span class="hljs-type">char</span> fileName[<span class="hljs-number">8</span>];<br>    <span class="hljs-type">char</span> exName[<span class="hljs-number">3</span>];<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> attribute;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">short</span> time;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">short</span> date;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">short</span> first;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> length;<br>    <span class="hljs-type">char</span> dir[<span class="hljs-number">80</span>]; <span class="hljs-comment">// 记录目录</span><br>    <span class="hljs-type">int</span> count; <span class="hljs-comment">//读写指针，我没有用到</span><br>    <span class="hljs-type">char</span> fcbState; <span class="hljs-comment">//0未修改，1已修改</span><br>    <span class="hljs-type">char</span> toOpenfile; <span class="hljs-comment">//0空闲，1占用</span><br>&#125;userOpen;<br><br><span class="hljs-keyword">typedef</span> <span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">Block0</span>&#123;</span><br>    <span class="hljs-type">char</span> information[<span class="hljs-number">200</span>]; <span class="hljs-comment">//描述信息</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">short</span> root; <span class="hljs-comment">//根目录起始盘块号</span><br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>* startBlock; <span class="hljs-comment">//描述信息</span><br>&#125;block0;<br><br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>* myVhard; <span class="hljs-comment">//磁盘首地址</span><br>userOpen openFileList[maxOpenfile]; <span class="hljs-comment">//用户打开文件表</span><br><span class="hljs-type">int</span> curdir; <span class="hljs-comment">//当前目录fd</span><br><span class="hljs-type">char</span> currentDir[<span class="hljs-number">80</span>]; <span class="hljs-comment">//当前目录路径</span><br><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>* pstart; <span class="hljs-comment">//数据区起始地址</span><br><br><span class="hljs-type">time_t</span> now ; <br><span class="hljs-class"><span class="hljs-keyword">struct</span> <span class="hljs-title">tm</span> <span class="hljs-title">tm_now</span> ;</span> <span class="hljs-comment">//获得日期时间</span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">startSys</span><span class="hljs-params">()</span>;  <span class="hljs-comment">//系统初始化</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">myFormat</span><span class="hljs-params">()</span>; <span class="hljs-comment">//磁盘格式化</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">my_cd</span><span class="hljs-params">(<span class="hljs-type">char</span>* dirname)</span>; <span class="hljs-comment">//cd命令调用</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">my_mkdir</span><span class="hljs-params">(<span class="hljs-type">char</span>* dirname)</span>; <span class="hljs-comment">//mkdir命令调用</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">my_rmdir</span><span class="hljs-params">(<span class="hljs-type">char</span>* dirname)</span>; <span class="hljs-comment">//rmdir命令调用</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">my_ls</span><span class="hljs-params">()</span>; <span class="hljs-comment">//ls命令调用</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">my_create</span><span class="hljs-params">(<span class="hljs-type">char</span>* filename)</span>; <span class="hljs-comment">//create命令调用</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">my_rm</span><span class="hljs-params">(<span class="hljs-type">char</span>* filename)</span>; <span class="hljs-comment">//rm命令调用</span><br><span class="hljs-type">int</span>  <span class="hljs-title function_">my_open</span><span class="hljs-params">(<span class="hljs-type">char</span>* filename)</span>; <span class="hljs-comment">//open命令调用</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">my_write</span><span class="hljs-params">(<span class="hljs-type">int</span> type)</span>; <span class="hljs-comment">//write命令调用</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">my_read</span><span class="hljs-params">()</span>; <span class="hljs-comment">//read命令调用</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">my_close</span><span class="hljs-params">()</span>; <span class="hljs-comment">//close命令调用</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">my_exit</span><span class="hljs-params">()</span>; <span class="hljs-comment">//exit命令调用</span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">getEmptyBlock</span><span class="hljs-params">()</span>; <span class="hljs-comment">// 得到一个</span><br><span class="hljs-type">int</span> <span class="hljs-title function_">getEmptyList</span><span class="hljs-params">()</span>; <span class="hljs-comment">//</span><br>fcb* <span class="hljs-title function_">find_dir</span><span class="hljs-params">(fcb* dir,<span class="hljs-type">char</span>* dirname)</span>; <span class="hljs-comment">//在dir目录中找dirname文件,有返回他的fcb地址，无返回NULL</span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    time(&amp;now) ;<br>    localtime_r(&amp;tm_now,&amp;now) ; <span class="hljs-comment">// 得到时间，不重要</span><br><br>    startSys(); <span class="hljs-comment">//系统初始化</span><br>    <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)&#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s :&quot;</span>,currentDir);  <span class="hljs-comment">//进入命令行</span><br>        <span class="hljs-type">char</span> cmd[<span class="hljs-number">256</span>];  <br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,cmd);  <span class="hljs-comment">//输入命令 </span><br>        <span class="hljs-comment">// 依次比对，调用命令函数 </span><br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(cmd,<span class="hljs-string">&quot;cd&quot;</span>)==<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-type">char</span> dirname[<span class="hljs-number">80</span>];<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,dirname);<br>            my_cd(dirname);<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(cmd,<span class="hljs-string">&quot;ls&quot;</span>)==<span class="hljs-number">0</span>)&#123;<br>            my_ls();<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(cmd,<span class="hljs-string">&quot;mkdir&quot;</span>)==<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-type">char</span> dirname[<span class="hljs-number">80</span>];<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,dirname);<br>            my_mkdir(dirname);<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(cmd,<span class="hljs-string">&quot;rmdir&quot;</span>)==<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-type">char</span> dirname[<span class="hljs-number">80</span>];<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,dirname);<br>            my_rmdir(dirname);<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(cmd,<span class="hljs-string">&quot;create&quot;</span>)==<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-type">char</span> filename[<span class="hljs-number">80</span>];<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,filename);<br>            my_create(filename);<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(cmd,<span class="hljs-string">&quot;rm&quot;</span>)==<span class="hljs-number">0</span>)&#123;<br>        <span class="hljs-type">char</span> filename[<span class="hljs-number">80</span>];<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,filename);<br>            my_rm(filename);<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(cmd,<span class="hljs-string">&quot;open&quot;</span>)==<span class="hljs-number">0</span>)&#123; <br>            <span class="hljs-type">char</span> filename[<span class="hljs-number">80</span>];<br>            <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,filename);<br>            <span class="hljs-keyword">if</span>(my_open(filename)!=<span class="hljs-number">-1</span>)&#123;  <span class="hljs-comment">//进入文件打开目录                </span><br>                <span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)&#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s :&quot;</span>,currentDir);<br>                <span class="hljs-type">char</span> cmd[<span class="hljs-number">8</span>];<br>                <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,cmd);  <span class="hljs-comment">//输入文件操作命令依次比对</span><br>                <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(cmd,<span class="hljs-string">&quot;read&quot;</span>)==<span class="hljs-number">0</span>)<br>                my_read();<br>               <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(cmd,<span class="hljs-string">&quot;write&quot;</span>)==<span class="hljs-number">0</span>)&#123;<br>               <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;type:0 jieduan\t 1 fugai\t 2 zuijia \n&quot;</span>);<br>               <span class="hljs-type">int</span> type;<br>               <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;type);<br>                   my_write(type);<br>                &#125;<br>                <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(cmd,<span class="hljs-string">&quot;close&quot;</span>)==<span class="hljs-number">0</span>)&#123;<br>                my_close();<br>                <span class="hljs-keyword">break</span>;<br>                &#125;<br>                <span class="hljs-keyword">else</span><br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: wrong command\n&quot;</span>);<br>                &#125;                <br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: open failed\n&quot;</span>);                        <br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(cmd,<span class="hljs-string">&quot;exit&quot;</span>)==<span class="hljs-number">0</span>)&#123;<br>        my_exit();<br>        <span class="hljs-keyword">break</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: wrong command\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">startSys</span><span class="hljs-params">()</span>&#123;<br><br>    myVhard=(<span class="hljs-type">char</span>*)<span class="hljs-built_in">malloc</span>(Size); <span class="hljs-comment">//申请分配内存空间</span><br>    FILE *file=fopen(<span class="hljs-string">&quot;FATsys.txt&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>); <span class="hljs-comment">// 打开存放磁盘数据的文件</span><br>    <span class="hljs-keyword">if</span>(file!=<span class="hljs-literal">NULL</span>)&#123;<br>    <span class="hljs-type">char</span> buffer[Size];  <span class="hljs-comment">//缓冲区</span><br>    fread(buffer,Size,<span class="hljs-number">1</span>,file); <span class="hljs-comment">//将磁盘数据读入缓冲区中</span><br>    <span class="hljs-built_in">memcpy</span>(myVhard,buffer,Size); <span class="hljs-comment">//将缓冲区数据覆盖到申请的内存空间中</span><br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123; <span class="hljs-comment">//如果没有文件，就进行创建</span><br>FILE *file=fopen(<span class="hljs-string">&quot;FATsys.txt&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>);<br>myFormat(); <span class="hljs-comment">//调用format进行格式化</span><br>fwrite(myVhard,Size,<span class="hljs-number">1</span>,file); <span class="hljs-comment">//格式化完成将数据写回文件</span><br>fclose(file);<br>    &#125;<br>    <span class="hljs-comment">// 进入系统设置当前目录为根目录</span><br>    fcb* root=(fcb*)(myVhard+<span class="hljs-number">5</span>*blockSize); <span class="hljs-comment">//得到根目录fcb地址</span><br>    <span class="hljs-built_in">memcpy</span>(openFileList,root,<span class="hljs-keyword">sizeof</span>(fcb)); <span class="hljs-comment">//将根目录fcb拷贝到用户文件打开表的第0项</span><br>    <span class="hljs-built_in">strcpy</span>(openFileList[<span class="hljs-number">0</span>].dir,<span class="hljs-string">&quot;/&quot;</span>); <span class="hljs-comment">//设置当前文件路径</span><br>    openFileList[<span class="hljs-number">0</span>].toOpenfile=<span class="hljs-number">1</span>; <span class="hljs-comment">//置1，表明0项已被占用</span><br>    curdir=<span class="hljs-number">0</span>; <span class="hljs-comment">//设置为当前目录</span><br>    <span class="hljs-built_in">strcpy</span>(currentDir,<span class="hljs-string">&quot;/&quot;</span>); <span class="hljs-comment">//设置当前路径</span><br>    pstart=(<span class="hljs-type">char</span>*)root; <span class="hljs-comment">// 数据区起始地址即根目录起始地址</span><br>    <br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">myFormat</span><span class="hljs-params">()</span>&#123;<br>    <br>    block0* block=(block0*)myVhard; <span class="hljs-comment">//引导快地址</span><br>    <span class="hljs-built_in">strcpy</span>(block-&gt;information,<span class="hljs-string">&quot;sixGroupFATsys_1024_1024000&quot;</span>); <span class="hljs-comment">//系统信息</span><br>    block-&gt;root=<span class="hljs-number">5</span>; <span class="hljs-comment">//根目录盘块号</span><br>    block-&gt;startBlock=myVhard+<span class="hljs-number">5</span>*blockSize; <span class="hljs-comment">//数据区起始地址</span><br>    <br>    fat* fat1=(fat*)(myVhard+<span class="hljs-number">1</span>*blockSize); <span class="hljs-comment">//fat1表起始地址</span><br>    <span class="hljs-type">int</span> i;<br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">6</span>;i++)<br>(fat1+i)-&gt;id=End; <span class="hljs-comment">//前面六个盘块已被占用</span><br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">6</span>;i&lt;<span class="hljs-number">1000</span>;i++)<br>(fat1+i)-&gt;id=Free; <span class="hljs-comment">//未占用盘块置零</span><br><br>    fat* fat2=(fat*)(myVhard+<span class="hljs-number">3</span>*blockSize); <span class="hljs-comment">//fat2表起始地址</span><br>    <span class="hljs-built_in">memcpy</span>(fat2,fat1,<span class="hljs-number">2</span>*blockSize); <span class="hljs-comment">// fat2表备份</span><br>    <br>    fcb* root=(fcb*)(myVhard+<span class="hljs-number">5</span>*blockSize); <span class="hljs-comment">//根目录fcb地址</span><br>    <span class="hljs-built_in">strcpy</span>(root-&gt;fileName,<span class="hljs-string">&quot;/&quot;</span>); <span class="hljs-comment">//设置文件名</span><br>    <span class="hljs-built_in">strcpy</span>(root-&gt;exName,<span class="hljs-string">&quot;di&quot;</span>); <span class="hljs-comment">// 设置扩展名</span><br>    root-&gt;attribute=<span class="hljs-number">0</span>; <span class="hljs-comment">//表明是目录</span><br>    root-&gt;first=<span class="hljs-number">5</span>;  <span class="hljs-comment">// 起始盘块</span><br>    root-&gt;length=<span class="hljs-number">2</span>*<span class="hljs-keyword">sizeof</span>(fcb); <span class="hljs-comment">// 长度，因为初始时有/和..两个目录，所以长度是两个fcb</span><br>    root-&gt;<span class="hljs-built_in">free</span>=<span class="hljs-number">1</span>; <span class="hljs-comment">//已分配</span><br>    root-&gt;time=tm_now.tm_mday; <span class="hljs-comment">//设置时间</span><br>    root-&gt;date=tm_now.tm_mon;<br><br>    fcb* fatherDir=root+<span class="hljs-number">1</span>;  <span class="hljs-comment">//设置父目录</span><br>    <span class="hljs-built_in">memcpy</span>(fatherDir,root,<span class="hljs-keyword">sizeof</span>(fcb)); <span class="hljs-comment">//由于是根目录，父目录即他自身</span><br>    <span class="hljs-built_in">strcpy</span>(fatherDir-&gt;fileName,<span class="hljs-string">&quot;..&quot;</span>); <span class="hljs-comment">//只需更改文件名</span><br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">my_cd</span><span class="hljs-params">(<span class="hljs-type">char</span>* dirname)</span>&#123;<br>    <span class="hljs-comment">//由于cd命令会更改当前目录，所以判断当前目录是否改过，如果改过更新fcb</span><br>    <span class="hljs-keyword">if</span>(openFileList[curdir].fcbState==<span class="hljs-number">1</span>)&#123;<br>        fcb* f;<br>        <span class="hljs-keyword">if</span>(curdir==<span class="hljs-number">0</span>)<br>            f=(fcb*)pstart; <span class="hljs-comment">//根目录fcb地址</span><br>        <span class="hljs-keyword">else</span>&#123;<br>            f=(fcb*)(myVhard+openFileList[curdir<span class="hljs-number">-1</span>].first*blockSize);<span class="hljs-comment">// 父目录的盘块起始地址</span><br>            <span class="hljs-keyword">for</span>(;<span class="hljs-built_in">strcmp</span>(f-&gt;fileName,openFileList[curdir].fileName)!=<span class="hljs-number">0</span>;f++);<span class="hljs-comment">//比对遍历</span><br>        &#125;<br>        <span class="hljs-comment">// 对比用户打开表和fcb，其实只有length会发生变化，只需更新length</span><br>        f-&gt;length=openFileList[curdir].length;<br>                  <br>    &#125;<br>  <span class="hljs-comment">// 返回上一级目录</span><br>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(dirname,<span class="hljs-string">&quot;..&quot;</span>)==<span class="hljs-number">0</span>)&#123;<br>    <span class="hljs-keyword">if</span>(curdir==<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">return</span>; <span class="hljs-comment">//根目录直接返回 </span><br>    <span class="hljs-keyword">else</span>&#123;<br>        openFileList[curdir].toOpenfile=<span class="hljs-number">0</span>;          <br>        curdir--; <span class="hljs-comment">//当前目录号减1</span><br>        <span class="hljs-built_in">strcpy</span>(currentDir,openFileList[curdir].dir); <span class="hljs-comment">//更新当前路径        </span><br>    &#125;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>    <br>    <span class="hljs-keyword">if</span>(curdir==<span class="hljs-number">0</span>&amp;&amp;<span class="hljs-built_in">strcmp</span>(dirname,<span class="hljs-string">&quot;/&quot;</span>)==<span class="hljs-number">0</span>)<br>    <span class="hljs-keyword">return</span>; <span class="hljs-comment">// &quot;cd /&quot; 特殊情况直接返回</span><br>        <span class="hljs-keyword">else</span>&#123;<br>        userOpen* dir=&amp;openFileList[curdir];<br>        fcb* destDir=find_dir((fcb*)dir,dirname);<span class="hljs-comment">// 在当前目录下查找</span><br>    <span class="hljs-keyword">if</span>(destDir==<span class="hljs-literal">NULL</span>)<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: dirname not exist\n&quot;</span>);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(destDir-&gt;attribute==<span class="hljs-number">1</span>)  <span class="hljs-comment">//如果是文件</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: the dirname is file\n&quot;</span>);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(destDir-&gt;attribute==<span class="hljs-number">0</span>)&#123;<br>    <span class="hljs-type">int</span> num=getEmptyList(); <span class="hljs-comment">//得到一个空白用户文件打开表号</span><br>    <span class="hljs-keyword">if</span>(num==<span class="hljs-number">-1</span>)<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: no empty openList\n&quot;</span>);<br>    <span class="hljs-keyword">else</span>&#123;  <br>                        <span class="hljs-comment">// 更新当前目录</span><br>           openFileList[num].toOpenfile=<span class="hljs-number">1</span>;<br>           <span class="hljs-built_in">memcpy</span>(openFileList+num,destDir,<span class="hljs-keyword">sizeof</span>(fcb));<br>           <span class="hljs-built_in">strcpy</span>(openFileList[num].dir,openFileList[curdir].dir);<br>           <span class="hljs-built_in">strcat</span>(openFileList[num].dir,openFileList[num].fileName);<br>           <span class="hljs-built_in">strcat</span>(openFileList[num].dir,<span class="hljs-string">&quot;/&quot;</span>);<br>           openFileList[num].fcbState=<span class="hljs-number">0</span>;<br>           curdir=num;<br>           <span class="hljs-built_in">strcpy</span>(currentDir,openFileList[curdir].dir);<br>    &#125;<br>    &#125;<br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">my_ls</span><span class="hljs-params">()</span>&#123;<br>    userOpen* dir=&amp;openFileList[curdir];<br>    <span class="hljs-keyword">if</span>(dir-&gt;attribute==<span class="hljs-number">1</span>)&#123; <span class="hljs-comment">//如果是文件</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: file cannot use this command\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(dir-&gt;attribute==<span class="hljs-number">0</span>)&#123;<br><span class="hljs-type">int</span> i;<br>fcb* f=(fcb*)(myVhard+dir-&gt;first*blockSize);<span class="hljs-comment">//当前目录盘块起始地址</span><br><span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;dir-&gt;length/<span class="hljs-keyword">sizeof</span>(fcb);i++)  <span class="hljs-comment">//遍历打印</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s (%s) \t&quot;</span>,(f+i)-&gt;fileName,(f+i)-&gt;exName);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">my_mkdir</span><span class="hljs-params">(<span class="hljs-type">char</span>* dirname)</span>&#123;<br>    userOpen* dir=&amp;openFileList[curdir];<br>    <span class="hljs-keyword">if</span>(find_dir((fcb*)dir,dirname)!=<span class="hljs-literal">NULL</span>) <span class="hljs-comment">//遍历查找是否重名</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: dirname is existed\n&quot;</span>);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(blockSize&lt;(dir-&gt;length+<span class="hljs-keyword">sizeof</span>(fcb))) <span class="hljs-comment">//目录盘块是否有空余空间</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: curdir is full\n&quot;</span>);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(getEmptyBlock()==<span class="hljs-number">-1</span>) <span class="hljs-comment">//创建目录要分配盘块，看看是否有空闲盘块</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: the disk is full\n&quot;</span>);<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-type">int</span> blocknum=getEmptyBlock();<br>        fat* fat1=(fat*)(myVhard+<span class="hljs-number">1</span>*blockSize);<br>        fat1[blocknum].id=End; <span class="hljs-comment">// 分配一个空闲盘块</span><br>        <span class="hljs-comment">//在父目录中写入fcb</span><br>   fcb* mkdir=(fcb*)(myVhard+dir-&gt;first*blockSize+dir-&gt;length); <span class="hljs-comment">//写入起始地址</span><br>        <span class="hljs-built_in">strcpy</span>(mkdir-&gt;fileName,dirname); <br>        <span class="hljs-built_in">strcpy</span>(mkdir-&gt;exName,<span class="hljs-string">&quot;di&quot;</span>);<br>        mkdir-&gt;attribute=<span class="hljs-number">0</span>;<br>        mkdir-&gt;first=blocknum;<br>        mkdir-&gt;length=<span class="hljs-keyword">sizeof</span>(fcb);<br>        mkdir-&gt;<span class="hljs-built_in">free</span>=<span class="hljs-number">1</span>;<br>    mkdir-&gt;time=tm_now.tm_mday;<br>        mkdir-&gt;date=tm_now.tm_mon;<br><br>dir-&gt;length+=<span class="hljs-keyword">sizeof</span>(fcb); <span class="hljs-comment">//父目录长度加一个fcb</span><br>dir-&gt;fcbState=<span class="hljs-number">1</span>; <span class="hljs-comment">//修改位置1</span><br><span class="hljs-comment">// 设置..目录</span><br>fcb* fatherDir=(fcb*)(myVhard+blocknum*blockSize);<br><span class="hljs-built_in">memcpy</span>(fatherDir,dir,<span class="hljs-keyword">sizeof</span>(fcb));<br><span class="hljs-built_in">strcpy</span>(fatherDir-&gt;fileName,<span class="hljs-string">&quot;..&quot;</span>);<br>fatherDir-&gt;<span class="hljs-built_in">free</span>=<span class="hljs-number">1</span>;<br>   &#125;<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">my_rmdir</span><span class="hljs-params">(<span class="hljs-type">char</span>* dirname)</span>&#123;<br>    userOpen* dir=&amp;openFileList[curdir];<br>    fcb* destDir=find_dir((fcb*)dir,dirname);<span class="hljs-comment">//父目录查找</span><br>    <span class="hljs-keyword">if</span>(destDir==<span class="hljs-literal">NULL</span>) <br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: the dir not exist\n&quot;</span>);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(destDir-&gt;attribute==<span class="hljs-number">1</span>)<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: the file cannot use command\n&quot;</span>);<br>    <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-type">int</span> num=destDir-&gt;length/<span class="hljs-keyword">sizeof</span>(fcb);<br>        <span class="hljs-keyword">if</span>(num&gt;<span class="hljs-number">1</span>)  <span class="hljs-comment">//如果是非空目录</span><br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: the dir not empty\n&quot;</span>);<br>        <span class="hljs-keyword">else</span>&#123;<br>            fat* fat1=(fat*)(myVhard+<span class="hljs-number">1</span>*blockSize);<br>            fat1[destDir-&gt;first].id=<span class="hljs-number">0</span>; <span class="hljs-comment">//回收目录盘块</span><br>            openFileList[curdir].length-=<span class="hljs-keyword">sizeof</span>(fcb); <span class="hljs-comment">//父目录长度减一个fcb</span><br>            openFileList[curdir].fcbState=<span class="hljs-number">1</span>;            <br>        &#125;<br>        <br>    &#125;<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">my_create</span><span class="hljs-params">(<span class="hljs-type">char</span>* filename)</span>&#123;<br>    userOpen* dir=&amp;openFileList[curdir];<br>    <span class="hljs-keyword">if</span>(find_dir((fcb*)dir,filename)!=<span class="hljs-literal">NULL</span>)  <span class="hljs-comment">// 判断是否重名</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: filename is existed\n&quot;</span>);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(blockSize&lt;(dir-&gt;length+<span class="hljs-keyword">sizeof</span>(fcb))) <span class="hljs-comment">//当前目录盘块是否有空余</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: curdir is full\n&quot;</span>);<br>    <span class="hljs-keyword">else</span>&#123;        <br>         <span class="hljs-comment">// 下面参考mkdir，不同的是create不进行盘块分配，写入该文件时进行分配</span><br>fcb* fl=(fcb*)(myVhard+dir-&gt;first*blockSize+dir-&gt;length);<br>        <span class="hljs-built_in">strcpy</span>(fl-&gt;fileName,filename);<br>        <span class="hljs-built_in">strcpy</span>(fl-&gt;exName,<span class="hljs-string">&quot;fl&quot;</span>);<br>        fl-&gt;attribute=<span class="hljs-number">1</span>;<br>        fl-&gt;first=End;<br>        fl-&gt;length=<span class="hljs-number">0</span>;<br>fl-&gt;time=tm_now.tm_mday;<br>        fl-&gt;date=tm_now.tm_mon;<br>dir-&gt;length+=<span class="hljs-keyword">sizeof</span>(fcb);<br>dir-&gt;fcbState=<span class="hljs-number">1</span>;<br>   &#125;<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">my_rm</span><span class="hljs-params">(<span class="hljs-type">char</span>* filename)</span>&#123;<br>userOpen* dir=&amp;openFileList[curdir];<br>fcb* fl=find_dir((fcb*)dir,filename);<br>    <span class="hljs-keyword">if</span>(fl==<span class="hljs-literal">NULL</span>)<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: filename not exist\n&quot;</span>);<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(fl-&gt;attribute==<span class="hljs-number">0</span>)<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: the file is dir\n&quot;</span>);<br>    <span class="hljs-keyword">else</span>&#123;<br>    fat* fat1=(fat*)(myVhard+<span class="hljs-number">1</span>*blockSize);<br>    <span class="hljs-type">int</span> bnum=fl-&gt;first;<br>        <span class="hljs-comment">// 回收盘块</span><br>    <span class="hljs-keyword">while</span>(bnum!=End)&#123;<br>    <span class="hljs-type">int</span> a=bnum;   <br>    bnum=fat1[bnum].id;<br>    fat1[a].id=<span class="hljs-number">0</span>; <br>    &#125;<br>    dir-&gt;length-=<span class="hljs-keyword">sizeof</span>(fcb);<br>dir-&gt;fcbState=<span class="hljs-number">1</span>;<br>    &#125;<br>&#125;<br><br><span class="hljs-type">int</span>  <span class="hljs-title function_">my_open</span><span class="hljs-params">(<span class="hljs-type">char</span>* filename)</span>&#123;<br> <span class="hljs-type">int</span> ret=<span class="hljs-number">-1</span>;<br> userOpen* dir=&amp;openFileList[curdir];<br>     fcb* destFile=find_dir((fcb*)dir,filename);<br>     <span class="hljs-keyword">if</span>(destFile==<span class="hljs-literal">NULL</span>)<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: filename not exist\n&quot;</span>);<br>     <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(destFile-&gt;attribute==<span class="hljs-number">0</span>)<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: the filename is dir\n&quot;</span>);<br>     <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(destFile-&gt;attribute==<span class="hljs-number">1</span>)&#123;<br>    <span class="hljs-type">int</span> num=getEmptyList();<br>    <span class="hljs-keyword">if</span>(num==<span class="hljs-number">-1</span>)<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: no empty openList\n&quot;</span>);<br>    <span class="hljs-keyword">else</span>&#123;<br>             <span class="hljs-comment">// 加载到用户打开文件表 ,参考cd</span><br>    openFileList[num].toOpenfile=<span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">memcpy</span>(openFileList+num,destFile,<span class="hljs-keyword">sizeof</span>(fcb));<br>    <span class="hljs-built_in">strcpy</span>(openFileList[num].dir,openFileList[curdir].dir);<br>    <span class="hljs-built_in">strcat</span>(openFileList[num].dir,openFileList[num].fileName);<br>        <span class="hljs-built_in">strcat</span>(openFileList[num].dir,<span class="hljs-string">&quot;/&quot;</span>);<br>        openFileList[num].fcbState=<span class="hljs-number">0</span>;               <br>        curdir=num;<br>    <span class="hljs-built_in">strcpy</span>(currentDir,openFileList[curdir].dir);<br>    ret=curdir;<br>    &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> ret;<br>&#125;<br><span class="hljs-type">void</span> <span class="hljs-title function_">my_write</span><span class="hljs-params">(<span class="hljs-type">int</span> type)</span>&#123;<br>fat* fat1=(fat*)(myVhard+<span class="hljs-number">1</span>*blockSize);<br>    <span class="hljs-comment">// 判断是否分配了盘块</span><br><span class="hljs-keyword">if</span>(openFileList[curdir].first==End)&#123;<br><span class="hljs-type">int</span> blocknum=getEmptyBlock();   <span class="hljs-comment">//分配盘块     </span><br>        fat1[blocknum].id=End;<br>        openFileList[curdir].first=blocknum;<br>        openFileList[curdir].fcbState=<span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-type">char</span>* pwrite=myVhard+openFileList[curdir].first*blockSize;<br><span class="hljs-keyword">if</span>(type==<span class="hljs-number">0</span>)&#123;<br><span class="hljs-type">char</span> buffer[<span class="hljs-number">10240</span>];  <span class="hljs-comment">// 设置写缓冲区</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please write(type0):\n&quot;</span>);<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,buffer);<br><span class="hljs-type">int</span> writesize=<span class="hljs-built_in">strlen</span>(buffer)*<span class="hljs-keyword">sizeof</span>(<span class="hljs-type">char</span>); <span class="hljs-comment">//计算待写入大小</span><br><br><span class="hljs-type">int</span> bnum=openFileList[curdir].first; <span class="hljs-comment">// 起始盘块号</span><br><span class="hljs-keyword">do</span>&#123;<br><span class="hljs-type">char</span>* pblock=myVhard+bnum*blockSize;<br><span class="hljs-built_in">memset</span>(pblock,<span class="hljs-number">0</span>,blockSize);<br>bnum=fat1[bnum].id;<br>&#125;<span class="hljs-keyword">while</span>(bnum!=End);<span class="hljs-comment">//截断写，先进行清空</span><br>openFileList[curdir].length=<span class="hljs-number">0</span>;<br>bnum=openFileList[curdir].first; <span class="hljs-comment">// 起始写入盘块号</span><br><span class="hljs-type">int</span> i=<span class="hljs-number">0</span>; <span class="hljs-comment">//计算写入次数，以便得到缓冲区偏移量</span><br><span class="hljs-type">int</span> preblock; <span class="hljs-comment">// 记录前一个盘块号</span><br><span class="hljs-keyword">do</span>&#123;<br>          <span class="hljs-comment">// 如果需要盘块，进行分配</span><br><span class="hljs-keyword">if</span>(bnum==End)&#123;<br>bnum=getEmptyBlock();<br><span class="hljs-keyword">if</span>(bnum==<span class="hljs-number">-1</span>)&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: no empty block\n&quot;</span>);<br><span class="hljs-keyword">break</span>;<br>&#125;<br>fat1[preblock].id=bnum;<br>fat1[bnum].id=End;<br>&#125;<br><span class="hljs-type">char</span>* pwrite=myVhard+bnum*blockSize; <span class="hljs-comment">//每次写入的起始指针</span><br><br><span class="hljs-comment">// 如果待写入大小大于一个盘块大小，本一次写入一个盘块大小</span><br><span class="hljs-keyword">if</span>(writesize&gt;blockSize)&#123;<br><span class="hljs-built_in">memcpy</span>(pwrite,buffer+i*blockSize,blockSize);<br>openFileList[curdir].length+=blockSize;<br>    i++;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;  <span class="hljs-comment">// 如果小于，写入待写入大小</span><br><span class="hljs-built_in">memcpy</span>(pwrite,buffer+i*blockSize,writesize);<br>openFileList[curdir].length+=writesize;<br>&#125;<br>writesize-=blockSize; <span class="hljs-comment">//按盘块写入的，每次减一个盘块大小</span><br>preblock=bnum; <span class="hljs-comment">// 记录前一个盘块，以便更新fat表</span><br>bnum=fat1[bnum].id; <span class="hljs-comment">//下一个盘块</span><br>&#125;<span class="hljs-keyword">while</span>(writesize&gt;<span class="hljs-number">0</span>);<br>openFileList[curdir].fcbState=<span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-number">1</span>)&#123; <span class="hljs-comment">//与截断写类似，不过不需要清空，并且需要比较覆盖长度和原长度的大小</span><br><span class="hljs-type">char</span> buffer[<span class="hljs-number">10240</span>];<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please write(type1):\n&quot;</span>);<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,buffer);<br><span class="hljs-type">int</span> writesize=<span class="hljs-built_in">strlen</span>(buffer)*<span class="hljs-keyword">sizeof</span>(<span class="hljs-type">char</span>);<br><span class="hljs-type">int</span> bnum=openFileList[curdir].first;<br>bnum=openFileList[curdir].first;<br><span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> preblock;<br><span class="hljs-type">int</span> newlength=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">do</span>&#123;<br><span class="hljs-keyword">if</span>(bnum==End)&#123;<br>bnum=getEmptyBlock();<br><span class="hljs-keyword">if</span>(bnum==<span class="hljs-number">-1</span>)&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: no empty block\n&quot;</span>);<br><span class="hljs-keyword">break</span>;<br>&#125;<br>fat1[preblock].id=bnum;<br>fat1[bnum].id=End;<br>&#125;<br><span class="hljs-type">char</span>* pwrite=myVhard+bnum*blockSize;<br><span class="hljs-keyword">if</span>(writesize&gt;blockSize)&#123;<br><span class="hljs-built_in">memcpy</span>(pwrite,buffer+i*blockSize,blockSize);<br>newlength+=blockSize;<br>    i++;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-built_in">memcpy</span>(pwrite,buffer+i*blockSize,writesize);<br>newlength+=writesize;<br>&#125;<br>writesize-=blockSize;<br>preblock=bnum;<br>bnum=fat1[bnum].id;<br>&#125;<span class="hljs-keyword">while</span>(writesize&gt;<span class="hljs-number">0</span>);<br>openFileList[curdir].fcbState=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">if</span>(newlength&gt;openFileList[curdir].length)<br>openFileList[curdir].length=newlength;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(type==<span class="hljs-number">2</span>)&#123; <span class="hljs-comment">// 追加写要复杂一些</span><br><span class="hljs-type">char</span> buffer[<span class="hljs-number">10240</span>];<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please write(type2):\n&quot;</span>);<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,buffer);<br><span class="hljs-type">int</span> writesize=<span class="hljs-built_in">strlen</span>(buffer)*<span class="hljs-keyword">sizeof</span>(<span class="hljs-type">char</span>);<br><span class="hljs-type">int</span> lastblock=openFileList[curdir].first;<br><span class="hljs-keyword">for</span>(;fat1[lastblock].id!=End;lastblock=fat1[lastblock].id); <span class="hljs-comment">// 得到最后一个盘块号</span><br> <span class="hljs-comment">//判断文件盘块是否写满</span><br>      <span class="hljs-keyword">if</span>(openFileList[curdir].length%blockSize==<span class="hljs-number">0</span>)&#123;<span class="hljs-comment">//满了需要申请空闲盘块</span><br><span class="hljs-type">int</span> preblock=lastblock;<br><span class="hljs-type">int</span> bnum=End;<br><span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">do</span>&#123;<br>bnum=getEmptyBlock(); <span class="hljs-comment">// 申请盘块</span><br><span class="hljs-keyword">if</span>(bnum==<span class="hljs-number">-1</span>)&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: no empty block\n&quot;</span>);<br><span class="hljs-keyword">break</span>;<br>&#125;<br>fat1[preblock].id=bnum;<br>fat1[bnum].id=End;<br><span class="hljs-type">char</span>* pwrite=myVhard+bnum*blockSize; <span class="hljs-comment">//写指针</span><br><br><span class="hljs-keyword">if</span>(writesize&gt;blockSize)&#123;<br><span class="hljs-built_in">memcpy</span>(pwrite,buffer+i*blockSize,blockSize);<br>openFileList[curdir].length+=blockSize;<br>   i++;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-built_in">memcpy</span>(pwrite,buffer+i*blockSize,writesize);<br>openFileList[curdir].length+=writesize;<br>&#125;<br>writesize-=blockSize;<br>preblock=bnum;<br>bnum=fat1[bnum].id;<br>&#125;<span class="hljs-keyword">while</span>(writesize&gt;<span class="hljs-number">0</span>);<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<span class="hljs-comment">//未满说明盘块还有剩余空间</span><br><span class="hljs-type">int</span> bnum=lastblock;<br><span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> preblock;<br><span class="hljs-type">int</span> freeSize=blockSize-openFileList[curdir].length%blockSize;<span class="hljs-comment">//计算剩余空间</span><br><span class="hljs-keyword">do</span>&#123;<br><span class="hljs-keyword">if</span>(bnum==End)&#123;<br>bnum=getEmptyBlock();<br><span class="hljs-keyword">if</span>(bnum==<span class="hljs-number">-1</span>)&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: no empty block\n&quot;</span>);<br><span class="hljs-keyword">break</span>;<br>&#125;<br>fat1[preblock].id=bnum;<br>fat1[bnum].id=End;<br>&#125;<br><span class="hljs-type">char</span>* pwrite;<br><span class="hljs-keyword">if</span>(freeSize&lt;blockSize) <span class="hljs-comment">// 计算写指针位置</span><br>pwrite=myVhard+bnum*blockSize+openFileList[curdir].length%blockSize;<br><span class="hljs-keyword">else</span><br>pwrite=myVhard+bnum*blockSize;<br><br><span class="hljs-keyword">if</span>(writesize&gt;freeSize)&#123;<br><span class="hljs-built_in">memcpy</span>(pwrite,buffer+i*freeSize,freeSize);<br>openFileList[curdir].length+=freeSize;<br>    i++;<br>&#125;<br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-built_in">memcpy</span>(pwrite,buffer+i*freeSize,writesize);<br>openFileList[curdir].length+=writesize;<br>&#125;<br>writesize-=freeSize;<br>preblock=bnum;<br>bnum=fat1[bnum].id;<br>freeSize=blockSize;<br>&#125;<span class="hljs-keyword">while</span>(writesize&gt;<span class="hljs-number">0</span>);<br>&#125;<br><br>openFileList[curdir].fcbState=<span class="hljs-number">1</span>;<br>&#125;<br>&#125;<br><span class="hljs-type">void</span> <span class="hljs-title function_">my_read</span><span class="hljs-params">()</span>&#123;<br><span class="hljs-keyword">if</span>(openFileList[curdir].first==End)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;error: file is empty\n&quot;</span>);<br><span class="hljs-keyword">else</span>&#123;<br><span class="hljs-type">char</span> buffer[<span class="hljs-number">1024</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br><span class="hljs-type">int</span> bnum=openFileList[curdir].first;<br><span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;<br>fat* fat1=(fat*)(myVhard+<span class="hljs-number">1</span>*blockSize);<br><span class="hljs-keyword">while</span>(bnum!=End)&#123;<br><span class="hljs-type">char</span>* pread=myVhard+bnum*blockSize;<br><span class="hljs-built_in">memcpy</span>(buffer,pread,blockSize);<span class="hljs-comment">//每次读一个盘块</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;read::\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s\n&quot;</span>,buffer);<br>bnum=fat1[bnum].id;<br>    &#125;<br>&#125;<br>&#125;<br><span class="hljs-type">void</span> <span class="hljs-title function_">my_close</span><span class="hljs-params">()</span>&#123;<br>   <span class="hljs-comment">//关闭文件时，判断文件是否被修改，如果被修改，需要写回fcb中</span><br><span class="hljs-keyword">if</span>(openFileList[curdir].fcbState==<span class="hljs-number">1</span>)&#123;<br>        fcb* f;<br>        <span class="hljs-keyword">if</span>(curdir==<span class="hljs-number">0</span>)<br>            f=(fcb*)pstart;<br>        <span class="hljs-keyword">else</span>&#123;<br>            f=(fcb*)(myVhard+openFileList[curdir<span class="hljs-number">-1</span>].first*blockSize);<br>            <span class="hljs-keyword">for</span>(;<span class="hljs-built_in">strcmp</span>(f-&gt;fileName,openFileList[curdir].fileName)!=<span class="hljs-number">0</span>;f++);<br>        &#125;<br>        f-&gt;first=openFileList[curdir].first;<br>        f-&gt;length=openFileList[curdir].length;       <br>&#125;<br>openFileList[curdir].toOpenfile=<span class="hljs-number">0</span>;            <br>    curdir--;<br>    <span class="hljs-built_in">strcpy</span>(currentDir,openFileList[curdir].dir);<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">my_exit</span><span class="hljs-params">()</span>&#123;<br>  <span class="hljs-comment">// 退出系统，备份fat2，更新根目录fcb,写入系统文件，以便再次打开时可以读取以前的文件</span><br> fat* fat1=(fat*)(myVhard+<span class="hljs-number">1</span>*blockSize);<br> fat* fat2=(fat*)(myVhard+<span class="hljs-number">3</span>*blockSize);<br>     <span class="hljs-built_in">memcpy</span>(fat2,fat1,<span class="hljs-number">2</span>*blockSize);<br> <span class="hljs-keyword">if</span>(openFileList[<span class="hljs-number">0</span>].fcbState==<span class="hljs-number">1</span>)&#123;<br>        fcb* f=(fcb*)pstart;<br>    f-&gt;length=openFileList[<span class="hljs-number">0</span>].length;<br>    &#125;<br>FILE *file=fopen(<span class="hljs-string">&quot;FATsys.txt&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>);<br>fwrite(myVhard,Size,<span class="hljs-number">1</span>,file);<br>fclose(file);<br>&#125;<br><span class="hljs-type">int</span> <span class="hljs-title function_">getEmptyBlock</span><span class="hljs-params">()</span>&#123;<br>    fat* fat1=(fat*)(myVhard+<span class="hljs-number">1</span>*blockSize);<br>    <span class="hljs-type">int</span> i;<br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">1000</span>;i++)<br><span class="hljs-keyword">if</span>(fat1[i].id==<span class="hljs-number">0</span>)<br>    <span class="hljs-keyword">return</span> i;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>&#125;<br>fcb* <span class="hljs-title function_">find_dir</span><span class="hljs-params">(fcb* dir,<span class="hljs-type">char</span>* dirname)</span>&#123;<br>    <span class="hljs-keyword">if</span>(dir-&gt;attribute==<span class="hljs-number">0</span>)&#123;<br><span class="hljs-type">int</span> i;<br>fcb* f=(fcb*)(myVhard+dir-&gt;first*blockSize);<br><span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;dir-&gt;length/<span class="hljs-keyword">sizeof</span>(fcb);i++)<br><span class="hljs-keyword">if</span>(<span class="hljs-built_in">strcmp</span>(f[i].fileName,dirname)==<span class="hljs-number">0</span>)<br><span class="hljs-keyword">return</span> f+i;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">getEmptyList</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> i;<br>    <span class="hljs-keyword">for</span>(i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">10</span>;i++)<br>        <span class="hljs-keyword">if</span>(openFileList[i].toOpenfile==<span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">return</span> i;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p class="note note-success">author: YaoGuangMing 2022-HDU</p><p class="note note-warning">转载请标明出处！</p>]]></content>
    
    
    <categories>
      
      <category>操作系统</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>操作系统实验三题目四</title>
    <link href="/2022/11/27/p3/"/>
    <url>/2022/11/27/p3/</url>
    
    <content type="html"><![CDATA[<p>题目四</p><span id="more"></span><h4 id="题目内容-共享内存通信"><a href="#题目内容-共享内存通信" class="headerlink" title="题目内容-共享内存通信"></a>题目内容-共享内存通信</h4><ul><li>编写程序 sender，它创建一个共享内存，然后随机产生一个100以内的计算表达式（例如12+34），并将这串表达式字符串通过共享内存发送给 receiver；最后，receiver完成表达式运算后，将计算结果(36)写到共享内存 ，sender收到应答消息后，将接收到的计算结果显示在终端屏幕上。上述计算重复10次后，sender向receiver发送”end”，等待receiver发送”over”信息后，删除共享内存，结束程序的运行。</li><li>编写程序receiver， 它通过共享内存接收来自 sender 产生的信息，如果该信息是计算表达式，则将表达式显示在终端屏幕上，然后计算表达式的结果，再通过该共享内存向sender 发送计算结果，等待接收下一个消息；如果该信息是”end”，则向 sender 发送一个应答消息”over”，并结束程序的运行。选择合适的信号量机制实现两个进程对共享内存的互斥及同步使用。</li></ul><h4 id="C代码"><a href="#C代码" class="headerlink" title="C代码"></a>C代码</h4><p>sender.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;sys/stat.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;semaphore.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;sys/types.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;sys/shm.h&gt;</span></span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">input</span><span class="hljs-params">(<span class="hljs-type">char</span>* msg)</span>;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br><span class="hljs-type">char</span> msg[<span class="hljs-number">256</span>];<span class="hljs-comment">//用来存放消息</span><br>  <br><span class="hljs-type">int</span> shmid=shmget(<span class="hljs-number">8084</span>,<span class="hljs-number">256</span>,IPC_CREAT | <span class="hljs-number">0666</span>); <br><span class="hljs-comment">// shmeget() 函数申请一块共享内存，</span><br>  <span class="hljs-comment">// 第一个参数是共享内存标识符，第二个参数是共享内存的大小，第三个参数是给予创建和读写权限</span><br>  <span class="hljs-comment">// 函数申请成功返回共享内存的ID号，失败返回-1</span><br><span class="hljs-keyword">if</span>(shmid &lt;<span class="hljs-number">0</span>)&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;failed\n&quot;</span>);<br>    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br>      <span class="hljs-comment">// 失败退出程序</span><br> &#125;<br><br><span class="hljs-type">char</span>* shmptr=shmat(shmid,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>); <br>  <span class="hljs-comment">//将共享内存映射到该进程地址,返回起始指针</span><br>  <br>  <span class="hljs-type">sem_t</span>* share_memory =sem_open(<span class="hljs-string">&quot;shm&quot;</span>,O_CREAT,<span class="hljs-number">0666</span>,<span class="hljs-number">1</span>);<br>  <span class="hljs-comment">//sem_open() 用来创建互斥量，</span><br>  <span class="hljs-comment">//第一个参数是该互斥量标识符，第二个参数代表若没有则创建，第三个参数赋予读写权限，第四个参数是初始值</span><br>  <span class="hljs-comment">//创建共享内存的互斥量并赋予初始值1，代表共享内存并未被使用，0代表共享内存在被占用</span><br>  <br><span class="hljs-type">sem_t</span>* s_send=sem_open(<span class="hljs-string">&quot;s_send&quot;</span>,O_CREAT,<span class="hljs-number">0666</span>,<span class="hljs-number">0</span>);<br>  <span class="hljs-comment">//  创建发送者的互斥量，用来标明谁发送了消息，0代表sender未发送消息，1代表sender发送了一条消息</span><br><span class="hljs-type">sem_t</span>* r_send=sem_open(<span class="hljs-string">&quot;r_send&quot;</span>,O_CREAT,<span class="hljs-number">0666</span>,<span class="hljs-number">0</span>);<br>  <span class="hljs-comment">//创建接收者的互斥量，0代表receiver未发送消息，1代表receiver发送了一条消息</span><br>  <span class="hljs-comment">//s_send 和 r_send 用于实现两个进程的同步</span><br><br><span class="hljs-type">int</span> i;<br><span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">11</span>;i++)&#123;<br>    <br><span class="hljs-keyword">if</span>(i&lt;<span class="hljs-number">11</span>)<br>      input(msg);<span class="hljs-comment">//input函数用来随机生成算数表达式</span><br><span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">strcpy</span>(msg,<span class="hljs-string">&quot;end\n&quot;</span>); <span class="hljs-comment">//最后一条消息发送end</span><br>sem_wait(share_memory);<span class="hljs-comment">// P操作，申请共享内存互斥量</span><br><span class="hljs-built_in">strcpy</span>(shmptr,msg); <span class="hljs-comment">//将消息拷贝到共享内存中</span><br>sem_post(share_memory); <span class="hljs-comment">// V操作, 释放共享内存互斥量</span><br>sem_post(s_send); <span class="hljs-comment">//V操作，释放s_send，代表sender已经发送了一条消息</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nsender to receiver %s \n&quot;</span>,msg); <span class="hljs-comment">//打印该消息</span><br><br>sem_wait(r_send); <span class="hljs-comment">// P操作，等待receiver回应</span><br>sem_wait(share_memory);<span class="hljs-comment">// P操作，申请共享内存互斥量</span><br><span class="hljs-built_in">strcpy</span>(msg,shmptr); <span class="hljs-comment">// 取出消息放到msg中</span><br>sem_post(share_memory); <span class="hljs-comment">// V操作, 释放共享内存互斥量</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;send has received %s\n&quot;</span>,msg); <span class="hljs-comment">// 打印该消息</span><br>&#125;<br><br>shmdt(shmptr);<span class="hljs-comment">// 将该映射地址删除</span><br>shmctl(shmid,IPC_RMID,<span class="hljs-number">0</span>); <span class="hljs-comment">// 获得共享内存的控制权，释放共享内存</span><br>sem_close(share_memory); <span class="hljs-comment">// 关闭互斥量</span><br>sem_close(s_send); <span class="hljs-comment">// 关闭互斥量</span><br>sem_close(r_send); <span class="hljs-comment">// 关闭互斥量</span><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-type">void</span> <span class="hljs-title function_">input</span><span class="hljs-params">(<span class="hljs-type">char</span>* msg)</span>&#123;<br>          <br>  <span class="hljs-type">int</span> a=rand()%<span class="hljs-number">100</span>;<br>  <span class="hljs-type">int</span> b=rand()%<span class="hljs-number">100</span>;<br>  <span class="hljs-built_in">sprintf</span>(msg,<span class="hljs-string">&quot;%d+%d\n&quot;</span>,a,b); <span class="hljs-comment">// 打印到msg中</span><br><br>&#125;<br></code></pre></td></tr></table></figure><p>receiver.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;sys/stat.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;fcntl.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;semaphore.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;sys/types.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;sys/shm.h&gt;</span></span><br><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br><span class="hljs-type">char</span> msg[<span class="hljs-number">256</span>];<br><span class="hljs-type">int</span> shmid=shmget(<span class="hljs-number">8084</span>,<span class="hljs-number">256</span>,IPC_CREAT |<span class="hljs-number">0666</span>);<br><br><span class="hljs-keyword">if</span>(shmid &lt;<span class="hljs-number">0</span>)&#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;failed\n&quot;</span>);<br>    <span class="hljs-built_in">exit</span>(<span class="hljs-number">0</span>);<br> &#125;<br><br><span class="hljs-type">char</span>* shmptr=shmat(shmid,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>);<br><span class="hljs-type">sem_t</span>* share_memory =sem_open(<span class="hljs-string">&quot;shm&quot;</span>,O_CREAT,<span class="hljs-number">0666</span>,<span class="hljs-number">1</span>);<br><span class="hljs-type">sem_t</span>* s_send=sem_open(<span class="hljs-string">&quot;s_send&quot;</span>,O_CREAT,<span class="hljs-number">0666</span>,<span class="hljs-number">0</span>);<br><span class="hljs-type">sem_t</span>* r_send=sem_open(<span class="hljs-string">&quot;r_send&quot;</span>,O_CREAT,<span class="hljs-number">0666</span>,<span class="hljs-number">0</span>);<br><br> <span class="hljs-comment">// 前面代码与serder.c相同不再赘述</span><br><span class="hljs-type">int</span> i;<br><span class="hljs-keyword">for</span>(i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">11</span>;i++)&#123;<br><br>sem_wait(s_send); <span class="hljs-comment">// P操作，等待sender发送消息</span><br>sem_wait(share_memory); <span class="hljs-comment">// P操作，申请共享内存互斥量</span><br><span class="hljs-built_in">strcpy</span>(msg,shmptr); <span class="hljs-comment">// 将消息取出，放到msg中</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\nreceiver has received %s\n&quot;</span>,msg); <span class="hljs-comment">// 打印该消息</span><br><br><span class="hljs-keyword">if</span>(i&lt;<span class="hljs-number">11</span>)&#123;<br>    <span class="hljs-type">int</span> a,b;<br>    <span class="hljs-built_in">sscanf</span>(msg,<span class="hljs-string">&quot;%d+%d&quot;</span>,&amp;a,&amp;b); <span class="hljs-comment">// 取出两个整数a,b</span><br>    <span class="hljs-built_in">sprintf</span>(msg,<span class="hljs-string">&quot;%d\n&quot;</span>,a+b); <span class="hljs-comment">// 计算结果，放到msg中</span><br>&#125;<br><span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">strcpy</span>(msg,<span class="hljs-string">&quot;over\n&quot;</span>); <span class="hljs-comment">// 最后一条消息发送over</span><br><br><span class="hljs-built_in">strcpy</span>(shmptr,msg); <span class="hljs-comment">// 发送消息到共享内存中</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;receiver to sender %s\n&quot;</span>,msg); <span class="hljs-comment">// 打印该消息</span><br>sem_post(share_memory); <span class="hljs-comment">// 释放共享内存互斥量</span><br>sem_post(r_send); <span class="hljs-comment">// 释放r_send，表明receiver已经回应了一条消息</span><br>&#125;<br>shmdt(shmptr); <span class="hljs-comment">// 删除映射地址</span><br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h4><p>Makefile文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">all : sender receiver<br>.PHONY : clean<br>sender : sender.o<br>         cc -pthread -o sender sender.o<br>receiver : receiver.o<br>         cc -pthread -o receiver receiver.o<br> clean : <br>         <span class="hljs-built_in">rm</span>  receiver<br>         <span class="hljs-built_in">rm</span>  sender <br>         <span class="hljs-built_in">rm</span>  *.o <br></code></pre></td></tr></table></figure><h4 id="全部完成后输入命令"><a href="#全部完成后输入命令" class="headerlink" title="全部完成后输入命令"></a>全部完成后输入命令</h4><ul><li>make（重新编译输入make即可）</li><li>./receiver</li><li>./sender（另起一个终端）</li></ul><h4 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h4><p><img src="/img/os/13.png"></p><p class="note note-success">author: YaoGuangMing 2022-HDU</p><p class="note note-warning">转载请标明出处！</p>]]></content>
    
    
    <categories>
      
      <category>操作系统</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>计网实验ARP</title>
    <link href="/2022/11/11/p5/"/>
    <url>/2022/11/11/p5/</url>
    
    <content type="html"><![CDATA[<p>ARP协议</p><span id="more"></span><h3 id="查看ARP表和指定IP的ARP表"><a href="#查看ARP表和指定IP的ARP表" class="headerlink" title="查看ARP表和指定IP的ARP表"></a>查看ARP表和指定IP的ARP表</h3><p>1.管理员权限打开cmd.exe命令行窗口<br>2.查看ARP表：输入命令：arp -a<br><img src="/img/cnet/ARP/1.png" srcset="/img/loading.gif" lazyload><br>3.查看指定IP的APR表：输入命令：arp -a 192.168.56.1 -n<br><img src="/img/cnet/ARP/2.png" srcset="/img/loading.gif" lazyload></p><hr><h3 id="删除ARP表项"><a href="#删除ARP表项" class="headerlink" title="删除ARP表项"></a>删除ARP表项</h3><p>1.输入命令<br>arp -d 192.168.1.1<br>arp -a 192.168.1.1<br><img src="/img/cnet/ARP/3.png" srcset="/img/loading.gif" lazyload></p><hr><h3 id="抓取APR请求和响应数据包"><a href="#抓取APR请求和响应数据包" class="headerlink" title="抓取APR请求和响应数据包"></a>抓取APR请求和响应数据包</h3><p>1.输入命令：ping 192.168.1.1<br><img src="/img/cnet/ARP/4.png" srcset="/img/loading.gif" lazyload><br>2.通过arp过滤抓包<br><img src="/img/cnet/ARP/5.png" srcset="/img/loading.gif" lazyload><br>3.请求数据包分析<br><img src="/img/cnet/ARP/6.png" srcset="/img/loading.gif" lazyload><br>4.响应数据包分析<br><img src="/img/cnet/ARP/7.png" srcset="/img/loading.gif" lazyload></p><hr><h3 id="抓取无理由ARP数据包"><a href="#抓取无理由ARP数据包" class="headerlink" title="抓取无理由ARP数据包"></a>抓取无理由ARP数据包</h3><p>1.更改本机以太网网路地址<br>2.使用arp.isgratuitous过滤抓包<br>3.分析数据包<br><img src="/img/cnet/ARP/8.png" srcset="/img/loading.gif" lazyload></p><hr><h3 id="配置静态ARP"><a href="#配置静态ARP" class="headerlink" title="配置静态ARP"></a>配置静态ARP</h3><p>1.输入命令：arp -s 192.168.1.2 00-23-cd-ac-aa-dd<br>2.输入命令：ping 192.168.1.2<br><img src="/img/cnet/ARP/9.png" srcset="/img/loading.gif" lazyload><br>3.使用ip.dst &#x3D;&#x3D; 192.168.1.2过滤抓包<br><img src="/img/cnet/ARP/10.png" srcset="/img/loading.gif" lazyload></p><p class="note note-success">author: YaoGuangMing 2022-HDU</p><p class="note note-warning">转载请标明出处！</p>]]></content>
    
    
    <categories>
      
      <category>计算机网络</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>操作系统实验二</title>
    <link href="/2022/10/13/p2/"/>
    <url>/2022/10/13/p2/</url>
    
    <content type="html"><![CDATA[<p>实验二（题目五）</p><span id="more"></span><h3 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h3><ul><li>题目内容：改变主机名称为自定义字符串</li><li>思路：通过系统提供的更改文件的系统调用，对&#x2F;etc&#x2F;hostname进行更改</li><li>平台：华为云ubuntu20.04操作系统</li><li>注意：内核编译完成后，服务器重启之后一定要用VCN登录，在VCN上再reboot一下,会出现一个选择界面，选第二个就可以看到你编译的内核了，cloud重启登录内核是加不进去的</li><li>命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.14.295.tar.xz<br>xz -d linux-4.14.295.tar.xz <br>tar -xvf linux-4.14.295.tar <br>vim <span class="hljs-built_in">arch</span>/x86/entry/syscalls/syscall_64.tbl    //添加调用号<br>vim include/linux/syscalls.h    //函数声明<br>vim kernel/sys.c    //函数实现<br>apt-get install libncurses5-dev<br>apt-get install libssl-dev<br>apt-get install flex<br>apt-get install bison<br>make mrproper<br>make menuconfig<br>make -j128<br>make -j128  modules<br>make modules_install<br>make install<br>reboot<br></code></pre></td></tr></table></figure>编译过程中好像有个关于debian….的错误，笔者是输入 scripts&#x2F;config –set-str SYSTEM_TRUSTED_KEYS “” 解决的 ，还有就是哪个bzimg的错误（编译的时候先把服务器配置改成128核的CPU，然后就很快乐）</li></ul><hr><h3 id="调用函数代码"><a href="#调用函数代码" class="headerlink" title="调用函数代码"></a>调用函数代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c">SYSCALL_DEFINE2(ysethostname, <span class="hljs-type">char</span> __user*, name,<span class="hljs-type">int</span>, len)<br>&#123;<br>        <span class="hljs-type">int</span> errno;<br>        <span class="hljs-type">char</span> tmp[<span class="hljs-number">64</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br>        <span class="hljs-keyword">if</span>(len &lt;<span class="hljs-number">0</span> || len&gt;<span class="hljs-number">64</span>)<br>                <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>        errno=<span class="hljs-number">0</span>;<br>        <span class="hljs-type">mm_segment_t</span> fs;<br>        fs=get_fs();<br>        set_fs(get_ds());<br>        <span class="hljs-keyword">if</span>(!copy_from_user(tmp,name,len))&#123;<br>                <span class="hljs-type">int</span> fhost=sys_open(<span class="hljs-string">&quot;/etc/hostname&quot;</span>, O_WRONLY | O_RDONLY,<span class="hljs-number">0</span>);<br>                sys_write(fhost,tmp,<span class="hljs-number">64</span>);<br>                errno=<span class="hljs-number">1</span>;<br>        &#125;<br>        sys_close(fhost);<br>        set_fs(fs);<br>        <span class="hljs-keyword">return</span> errno;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h3 id="测试调用C代码"><a href="#测试调用C代码" class="headerlink" title="测试调用C代码"></a>测试调用C代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;unistd.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;sys/syscall.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>        <span class="hljs-type">char</span> name[<span class="hljs-number">64</span>];<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;input name:&quot;</span>);<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%s&quot;</span>,name);<br>        <span class="hljs-type">int</span> len=<span class="hljs-built_in">strlen</span>(name);<br>        syscall(<span class="hljs-number">334</span>,name,len);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;success\n&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p class="note note-success">author: YaoGuangMing 2022-HDU</p><p class="note note-warning">转载请标明出处！</p>]]></content>
    
    
    <categories>
      
      <category>操作系统</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>操作系统实验一(题目1)</title>
    <link href="/2022/10/02/p1/"/>
    <url>/2022/10/02/p1/</url>
    
    <content type="html"><![CDATA[<p>实验一 （题目一）</p><span id="more"></span><hr><h3 id="简要"><a href="#简要" class="headerlink" title="简要"></a>简要</h3><ul><li>笔者的虚拟机装的是Ubuntu</li><li>安装vim,make,gcc</li><li>执行insmod命令时要用管理权限，sudo insmod mod</li><li>task_struct的state这个变量不知道是怎么回事，我的编译会出错，错误内容是没有这个模块成员？？？(哪个坏家伙把state换了)， 改成_ _state就可以了</li><li>以下附上本实验要用的task_struct成员，其中comm指进程名称,mm用于区分是否是内核线程<br><img src="/img/os/1.png" srcset="/img/loading.gif" lazyload><img src="/img/os/2.png" srcset="/img/loading.gif" lazyload> <img src="/img/os/3.png" srcset="/img/loading.gif" lazyload> <img src="/img/os/4.png" srcset="/img/loading.gif" lazyload> <img src="/img/os/5.png" srcset="/img/loading.gif" lazyload> <img src="/img/os/6.png" srcset="/img/loading.gif" lazyload></li></ul><hr><h3 id="模块一"><a href="#模块一" class="headerlink" title="模块一"></a>模块一</h3><p>按照书上说明做即可<br><img src="/img/os/10.png" srcset="/img/loading.gif" lazyload><br><img src="/img/os/7.png" srcset="/img/loading.gif" lazyload></p><hr><h3 id="模块二"><a href="#模块二" class="headerlink" title="模块二"></a>模块二</h3><p><strong>这里重点提示一下下</strong>，父节点的children节点和子节点的sibling节点，他们的关系是父节点的children节点与子节点的sibling节点构成了一个循环链表，所以求兄弟节点的if语句就是去掉children这个头节点，不然会有乱码<br><img src="/img/os/8.png" srcset="/img/loading.gif" lazyload><br><img src="/img/os/9.png" srcset="/img/loading.gif" lazyload><br><img src="/img/os/11.png" srcset="/img/loading.gif" lazyload></p><hr><h3 id="附代码"><a href="#附代码" class="headerlink" title="附代码"></a>附代码</h3><p>模块1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;linux/init.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;linux/module.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;linux/kernel.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;linux/sched/signal.h&gt;</span></span><br><br><span class="hljs-function"><span class="hljs-type">static</span> <span class="hljs-type">int</span> <span class="hljs-title">print_kernel_thread_init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">task_struct</span> *p= <span class="hljs-literal">NULL</span>;<br>    <span class="hljs-built_in">printk</span>(<span class="hljs-string">&quot;module1 start&quot;</span>);<br>    for_each_process(p)&#123;<br>    <span class="hljs-keyword">if</span>(p-&gt;mm==<span class="hljs-literal">NULL</span>)<br>    &#123;<br>        <span class="hljs-built_in">printk</span>(<span class="hljs-string">&quot;%s\t%d\t%d\t%ld\t%d\n&quot;</span>,p-&gt;comm,p-&gt;pid,p-&gt;parent-&gt;pid,p-&gt;__state,p-&gt;prio);<br>    &#125;<br>    &#125;<br>    <span class="hljs-built_in">printk</span>(<span class="hljs-string">&quot;finish&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title">print_kernel_thread_exit</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-built_in">printk</span>(<span class="hljs-string">&quot;module1 exit&quot;</span>);<br>&#125;<br><br><span class="hljs-built_in">module_init</span>(print_kernel_thread_init);<br><span class="hljs-built_in">module_exit</span>(print_kernel_thread_exit);<br><span class="hljs-built_in">MODULE_LICENSE</span>(<span class="hljs-string">&quot;GPL&quot;</span>);<br></code></pre></td></tr></table></figure><p>Makefile</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-number">1</span> obj-<span class="hljs-keyword">m</span> :=mod1.<span class="hljs-keyword">o</span><br><span class="hljs-number">2</span> mod1-objs :=module1.<span class="hljs-keyword">o</span><br><span class="hljs-number">3</span> KDIR :=/lib/modules/$(<span class="hljs-keyword">shell</span> uname -r)/build<br><span class="hljs-number">4</span> PWD :=$(<span class="hljs-keyword">shell</span> <span class="hljs-keyword">pwd</span>)<br><span class="hljs-number">5</span> default:<br><span class="hljs-number">6</span>         <span class="hljs-keyword">make</span> -C $(KDIR) M=$(PWD) modules<br><span class="hljs-number">7</span> clean:<br><span class="hljs-number">8</span>         <span class="hljs-keyword">make</span> -C $(KDIR) M=$(PWD) clean<br><span class="hljs-number">9</span> <br></code></pre></td></tr></table></figure><p>模块2</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;linux/init.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;linux/module.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;linux/kernel.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;linux/pid.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;linux/types.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;linux/sched.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;linux/list.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;linux/moduleparam.h&gt;</span></span><br><br><span class="hljs-type">static</span> <span class="hljs-type">int</span> pid;<br><span class="hljs-built_in">module_param</span>(pid,<span class="hljs-type">int</span> ,<span class="hljs-number">0644</span>);<br><br><span class="hljs-function"><span class="hljs-type">static</span> <span class="hljs-type">int</span> <span class="hljs-title">print_fml_init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">pid</span>* npid;<br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">task_struct</span>* task;<br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">task_struct</span>* parent;<br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">task_struct</span>* children;<br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">task_struct</span>* nsibling;<br>    <span class="hljs-keyword">struct</span> <span class="hljs-title class_">list_head</span>* p;<br><br>    npid=<span class="hljs-built_in">find_get_pid</span>(pid);<br>    task=<span class="hljs-built_in">pid_task</span>(npid,PIDTYPE_PID);<br>    <span class="hljs-built_in">printk</span>(<span class="hljs-string">&quot; mod1_1 start\n&quot;</span>);<br><br>    <span class="hljs-comment">//parent</span><br>    <span class="hljs-built_in">printk</span>(<span class="hljs-string">&quot;Parent:\n&quot;</span>);<br>    parent=task-&gt;parent;<br>    <span class="hljs-built_in">printk</span>(<span class="hljs-string">&quot;%s\t %d\t %d\n&quot;</span>,parent-&gt;comm,parent-&gt;pid,parent-&gt;__state);<br><br>    <span class="hljs-comment">//sibling</span><br>    <span class="hljs-built_in">printk</span>(<span class="hljs-string">&quot;Sibling:\n&quot;</span>);<br>    <span class="hljs-built_in">list_for_each</span>(p,&amp;(task-&gt;sibling))&#123;<br>    <span class="hljs-keyword">if</span>(p!=&amp;(task-&gt;parent-&gt;children))&#123;<br>        nsibling=<span class="hljs-built_in">list_entry</span>(p,<span class="hljs-keyword">struct</span> task_struct,sibling);<br>        <span class="hljs-built_in">printk</span>(<span class="hljs-string">&quot;%s\t %d\t %d\n&quot;</span>,nsibling-&gt;comm,nsibling-&gt;pid,nsibling-&gt;__state);<br>    &#125;<br>    &#125;<br><br>    <span class="hljs-comment">//children</span><br>    <span class="hljs-built_in">printk</span>(<span class="hljs-string">&quot;Children:\n&quot;</span>);<br>    <span class="hljs-built_in">list_for_each</span>(p,&amp;(task-&gt;children))&#123;<br>    children=<span class="hljs-built_in">list_entry</span>(p,<span class="hljs-keyword">struct</span> task_struct,sibling);<br>    <span class="hljs-built_in">printk</span>(<span class="hljs-string">&quot;%s\t %d\t %d\n&quot;</span>,children-&gt;comm,children-&gt;pid,children-&gt;__state);<br>    &#125;<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title">print_fml_exit</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span></span>&#123;<br>    <span class="hljs-built_in">printk</span>(<span class="hljs-string">&quot;mod1_1 exit\n&quot;</span>);<br>&#125;<br><br><span class="hljs-built_in">module_init</span>(print_fml_init);<br><span class="hljs-built_in">module_exit</span>(print_fml_exit);<br><br><span class="hljs-built_in">MODULE_LICENSE</span>(<span class="hljs-string">&quot;GPL&quot;</span>);<br></code></pre></td></tr></table></figure><p>Makefile</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-number">1</span> obj-<span class="hljs-keyword">m</span> :=mod1_1.<span class="hljs-keyword">o</span><br><span class="hljs-number">2</span> mod1_1-objs :=module1_1.<span class="hljs-keyword">o</span><br><span class="hljs-number">3</span> KDIR :=/lib/modules/$(<span class="hljs-keyword">shell</span> uname -r)/build<br><span class="hljs-number">4</span> PWD :=$(<span class="hljs-keyword">shell</span> <span class="hljs-keyword">pwd</span>)<br><span class="hljs-number">5</span> default:<br><span class="hljs-number">6</span>         <span class="hljs-keyword">make</span> -C $(KDIR) M=$(PWD) modules<br><span class="hljs-number">7</span> clean:<br><span class="hljs-number">8</span>         <span class="hljs-keyword">make</span> -C $(KDIR) M=$(PWD) clean            <br></code></pre></td></tr></table></figure><p class="note note-success">author: YaoGuangMing 2022-HDU</p><p class="note note-warning">转载请标明出处！</p>]]></content>
    
    
    <categories>
      
      <category>操作系统</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
